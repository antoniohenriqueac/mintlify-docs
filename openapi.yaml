openapi: 3.0.3
info:
  title: ConnectVets Notes API
  description: API para transcrição e análise de consultas veterinárias
  version: 1.0.0
  contact:
    name: ConnectVets Support
    email: suporte@connectvets.com.br
    url: https://connectvets.com.br
  license:
    name: Proprietary
    url: https://connectvets.com.br/terms

servers:
  - url: https://api-notes-h.connectvets.com.br/v1
    description: Homologação

security:
  - ApiKeyAuth: []

paths:
  /notes:
    post:
      tags:
        - Notes
      summary: Criar nova nota
      description: |
        Envie áudio para transcrição e criação de nota veterinária.
        
        **Rate Limiting**: Este endpoint está sujeito aos limites da sua API Key (padrão: 100 req/min, 1000 req/hora).
      operationId: createNote
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - audio
                - name
              properties:
                audio:
                  type: string
                  format: binary
                  description: Arquivo de áudio (WAV/FLAC recomendado)
                name:
                  type: string
                  description: Nome do paciente
                  example: "Rex"
                external_id:
                  type: string
                  description: ID do seu sistema para referência
                  example: "CLIENTE_123"
                gender:
                  type: string
                  enum: [male, female, unidentified]
                  description: Sexo do paciente
                  example: "male"
                metadata:
                  type: string
                  description: Metadados adicionais em formato JSON
                  example: '[{"key":"procedimento","value":"vacina"}]'
      responses:
        '201':
          description: Nota criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

    get:
      tags:
        - Notes
      summary: Listar notas
      description: |
        Obter lista paginada de notas.
        
        **Rate Limiting**: Este endpoint está sujeito aos limites da sua API Key (padrão: 100 req/min, 1000 req/hora).
      operationId: listNotes
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: Número da página
        - name: per_page
          in: query
          schema:
            type: integer
            default: 20
            maximum: 100
          description: Itens por página
        - name: external_id
          in: query
          schema:
            type: string
          description: Filtrar por ID externo
        - name: transcription_status
          in: query
          schema:
            type: string
            enum: [pending, processing, completed, failed]
          description: Filtrar por status de transcrição
        - name: name
          in: query
          schema:
            type: string
          description: Busca parcial por nome do paciente
        - name: from
          in: query
          schema:
            type: string
            format: date
          description: Data inicial (YYYY-MM-DD)
        - name: to
          in: query
          schema:
            type: string
            format: date
          description: Data final (YYYY-MM-DD)
      responses:
        '200':
          description: Lista de notas
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Note'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /notes/{noteId}:
    get:
      tags:
        - Notes
      summary: Obter nota específica
      description: |
        Recuperar uma nota pelo ID.
        
        **Rate Limiting**: Este endpoint está sujeito aos limites da sua API Key (padrão: 100 req/min, 1000 req/hora).
      operationId: getNote
      parameters:
        - name: noteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID da nota
      responses:
        '200':
          description: Nota encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/NoteWithSections'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /notes/{noteId}/status:
    get:
      tags:
        - Notes
      summary: Obter status da nota
      description: |
        Retorna o status atual de transcrição de uma nota específica.
        
        **Rate Limiting**: ⚡ Este endpoint **NÃO possui rate limiting**, mas recomendamos fazer chamadas com intervalo de pelo menos 5 segundos para evitar sobrecarga desnecessária.
      operationId: getNoteStatus
      parameters:
        - name: noteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID da nota para verificar o status
          example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: Status retornado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StatusResult'
              examples:
                completed:
                  summary: Transcrição concluída
                  value:
                    data:
                      status: "completed"
                      valid: true
                processing:
                  summary: Em processamento
                  value:
                    data:
                      status: "processing"
                      valid: false
                failed:
                  summary: Falha no processamento
                  value:
                    data:
                      status: "failed"
                      valid: false
        '400':
          description: ID da nota inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "bad_request"
                message: "Invalid note id"
                code: "INVALID_NOTE_ID"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Permissões insuficientes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "forbidden"
                message: "Note does not belong to tenant"
                code: "NOTE_ACCESS_DENIED"
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          description: Rate limit excedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "too_many_requests"
                message: "Rate limit exceeded"
                code: "RATE_LIMIT_EXCEEDED"

  /api-keys:
    post:
      tags:
        - API Keys
      summary: Criar API Key
      description: Gerar nova chave de API
      operationId: createApiKey
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: Nome descritivo da chave
                  example: "Integração DoctorVet"
                type:
                  type: string
                  enum: [read, write, admin]
                  default: write
                  description: Tipo de permissões
                rate_limit_per_minute:
                  type: integer
                  default: 100
                  description: Limite de requisições por minuto
                rate_limit_per_hour:
                  type: integer
                  default: 1000
                  description: Limite de requisições por hora
      responses:
        '201':
          description: API Key criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyCreated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

    get:
      tags:
        - API Keys
      summary: Listar API Keys
      description: Obter lista de chaves de API
      operationId: listApiKeys
      responses:
        '200':
          description: Lista de API Keys
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApiKey'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api-keys/{keyId}:
    delete:
      tags:
        - API Keys
      summary: Deletar API Key
      description: Revogar uma chave de API
      operationId: deleteApiKey
      parameters:
        - name: keyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID da chave
      responses:
        '204':
          description: Chave deletada com sucesso
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /webhooks:
    post:
      tags:
        - Webhooks
      summary: Criar webhook
      description: Configurar endpoint para receber notificações
      operationId: createWebhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
                - events
              properties:
                url:
                  type: string
                  format: uri
                  description: URL para receber as notificações
                  example: "https://api.meuapp.com/webhooks/connectvets"
                events:
                  type: array
                  items:
                    type: string
                    enum: [note.created, note.transcription.completed, note.transcription.failed]
                  description: Eventos para notificar
                  example: ["note.transcription.completed"]
                secret:
                  type: string
                  description: Segredo para validação HMAC (opcional)
                  example: "meu_segredo_webhook"
      responses:
        '201':
          description: Webhook criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

    get:
      tags:
        - Webhooks
      summary: Listar webhooks
      description: Obter lista de webhooks configurados
      operationId: listWebhooks
      responses:
        '200':
          description: Lista de webhooks
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Webhook'
        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
      description: API Key para autenticação

  schemas:
    Note:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID único da nota
          example: "6a4fe1de-52c4-4b2b-a30f-4b3fa9d7d8b3"
        name:
          type: string
          description: Nome do paciente
          example: "Rex"
        gender:
          type: string
          enum: [male, female, unidentified]
          description: Sexo do paciente
          example: "male"
        audio_name:
          type: string
          description: Nome do arquivo de áudio
          example: "consulta_rex_20240214.wav"
        audio_url:
          type: string
          format: uri
          description: URL do arquivo de áudio
          example: "https://cdn.connectvets.com/audio/6a4fe1de.wav"
        transcription_status:
          type: string
          enum: [pending, processing, completed, failed]
          description: Status da transcrição
          example: "completed"
        transcription_url:
          type: string
          format: uri
          nullable: true
          description: URL da transcrição
          example: "https://cdn.connectvets.com/transcriptions/6a4fe1de.txt"
        external_id:
          type: string
          nullable: true
          description: ID externo do seu sistema
          example: "CLIENTE_123"
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
          description: Metadados adicionais
        created_at:
          type: string
          format: date-time
          description: Data de criação
          example: "2024-02-14T18:25:43Z"
        updated_at:
          type: string
          format: date-time
          description: Data de atualização
          example: "2024-02-14T18:30:23Z"

    NoteWithSections:
      allOf:
        - $ref: '#/components/schemas/Note'
        - type: object
          properties:
            note_sections:
              type: array
              items:
                $ref: '#/components/schemas/NoteSection'
              description: Seções estruturadas da nota

    NoteSection:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID da seção
          example: "abc123-def456-ghi789"
        title:
          type: string
          description: Título da seção
          example: "Anamnese"
        label:
          type: string
          description: Label da seção
          example: "anamnese"
        content:
          type: string
          description: Conteúdo da seção
          example: "Paciente apresenta sintomas de..."
        order:
          type: string
          description: Ordem da seção
          example: "1"

    StatusResult:
      type: object
      required:
        - status
        - valid
      properties:
        status:
          type: string
          enum: [pending, processing, completed, failed]
          description: Status atual da transcrição
          example: "completed"
        valid:
          type: boolean
          description: Indica se a nota foi validada após o processamento
          example: true
      example:
        status: "completed"
        valid: true

    ApiKey:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID da chave
          example: "api-key-uuid-123"
        name:
          type: string
          description: Nome da chave
          example: "Integração DoctorVet"
        key_prefix:
          type: string
          description: Prefixo da chave (primeiros caracteres)
          example: "cvn_live_abc123..."
        type:
          type: string
          enum: [read, write, admin]
          description: Tipo de permissões
          example: "write"
        rate_limit_per_minute:
          type: integer
          description: Limite por minuto
          example: 100
        rate_limit_per_hour:
          type: integer
          description: Limite por hora
          example: 1000
        is_active:
          type: boolean
          description: Se a chave está ativa
          example: true
        created_at:
          type: string
          format: date-time
          description: Data de criação
          example: "2024-02-14T18:25:43Z"
        updated_at:
          type: string
          format: date-time
          description: Data de atualização
          example: "2024-02-14T18:30:23Z"
        last_used_at:
          type: string
          format: date-time
          nullable: true
          description: Último uso
          example: "2024-02-14T18:30:23Z"

    ApiKeyCreated:
      allOf:
        - $ref: '#/components/schemas/ApiKey'
        - type: object
          properties:
            key:
              type: string
              description: Chave completa (mostrada apenas na criação)
              example: "cvn_live_abc123def456ghi789..."

    Webhook:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID do webhook
          example: "webhook-uuid-123"
        url:
          type: string
          format: uri
          description: URL do endpoint
          example: "https://api.meuapp.com/webhooks/connectvets"
        events:
          type: array
          items:
            type: string
          description: Eventos configurados
          example: ["note.transcription.completed"]
        is_active:
          type: boolean
          description: Se o webhook está ativo
          example: true
        created_at:
          type: string
          format: date-time
          description: Data de criação
          example: "2024-02-14T18:25:43Z"
        updated_at:
          type: string
          format: date-time
          description: Data de atualização
          example: "2024-02-14T18:30:23Z"

    Metadata:
      type: object
      properties:
        key:
          type: string
          description: Chave do metadado
          example: "procedimento"
        value:
          type: string
          description: Valor do metadado
          example: "vacina"

    Pagination:
      type: object
      properties:
        current_page:
          type: integer
          description: Página atual
          example: 1
        total_pages:
          type: integer
          description: Total de páginas
          example: 10
        total_items:
          type: integer
          description: Total de itens
          example: 200
        per_page:
          type: integer
          description: Itens por página
          example: 20

    Error:
      type: object
      properties:
        error:
          type: string
          description: Código do erro
          example: "bad_request"
        message:
          type: string
          description: Mensagem de erro
          example: "Invalid audio format"
        code:
          type: string
          description: Código específico
          example: "INVALID_AUDIO_FORMAT"
        details:
          type: object
          description: Detalhes adicionais do erro

  responses:
    BadRequest:
      description: Requisição inválida
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "bad_request"
            message: "Invalid audio format"
            code: "INVALID_AUDIO_FORMAT"
            details:
              expected: "audio/wav"
              received: "audio/mp3"

    Unauthorized:
      description: Não autorizado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "unauthorized"
            message: "API Key missing or invalid"
            code: "INVALID_API_KEY"

    NotFound:
      description: Recurso não encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "not_found"
            message: "Note not found"
            code: "NOTE_NOT_FOUND"

    UnprocessableEntity:
      description: Entidade não processável
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "unprocessable_entity"
            message: "Audio file is too large"
            code: "AUDIO_TOO_LARGE" 